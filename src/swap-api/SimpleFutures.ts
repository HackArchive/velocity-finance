/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.8
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  AbstractAddress,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
  StrSlice,
} from 'fuels';

import type { Enum } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type PositionInput = { margin: BigNumberish, entryPrice: BigNumberish, isOpen: boolean, holder: IdentityInput };
export type PositionOutput = { margin: BN, entryPrice: BN, isOpen: boolean, holder: IdentityOutput };
export type PriceInput = { confidence: BigNumberish, exponent: BigNumberish, price: BigNumberish, publish_time: BigNumberish };
export type PriceOutput = { confidence: BN, exponent: number, price: BN, publish_time: BN };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "str",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    },
    {
      "type": "struct Position",
      "concreteTypeId": "5b037ac383fc71c3a4b2c49570d83501d3a1291a96a114187813301543541da8",
      "metadataTypeId": 1
    },
    {
      "type": "struct pyth_interface::data_structures::price::Price",
      "concreteTypeId": "8aba92fff7345309d4313706ed7db3a811609f62da8f0d2859819db43d461ff8",
      "metadataTypeId": 2
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "Address",
          "typeId": 3
        },
        {
          "name": "ContractId",
          "typeId": 4
        }
      ]
    },
    {
      "type": "struct Position",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "margin",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "entryPrice",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "isOpen",
          "typeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        },
        {
          "name": "holder",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct pyth_interface::data_structures::price::Price",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "confidence",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "exponent",
          "typeId": 5
        },
        {
          "name": "price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "publish_time",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "u32",
      "metadataTypeId": 5
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "isLong",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "close_position",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "_futuresExpiration",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "_maintenanceMargin",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "_leverage_divident",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "_asset_price",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "constructor",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "get_contract_margin",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "isLong",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "get_position",
      "output": "5b037ac383fc71c3a4b2c49570d83501d3a1291a96a114187813301543541da8",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "price_feed_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "get_price",
      "output": "8aba92fff7345309d4313706ed7db3a811609f62da8f0d2859819db43d461ff8",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "leverage",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "isLong",
          "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        }
      ],
      "name": "open_position",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "_asset_price",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "set_asset_price",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "10098701174489624218",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "304cf8092321eec4e81aa27609bfabc39114a98a741e72cde509638dc3163f19",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "583f4907acbce82f6e68388e488dbb58f72a750e41ab35b3d9f8a5d7f7787d97",
    "value": "0000000000000050000000000000000000000000000000000000000000000000"
  },
  {
    "key": "7c730ca8cc02a39348614bb92ce61841a1a02a6b8546ef20c8fd9973787fa786",
    "value": "000000000000000a000000000000000000000000000000000000000000000000"
  },
  {
    "key": "b166da2329ecf434195affd97fe9c630b69295d9ab55fc9bbd526f14d9df7f3f",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "cff5eb3ad5fc210f97e013e4fd25839761440f94cd2cd9ce911ed8bbae21fda6",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "d3fff53cb3f601909b7f6d81d7a61a484254248146dcc759d2bd393683250419",
    "value": "0000000000000000000000000000000001000000000000000000000000000000"
  },
  {
    "key": "d3fff53cb3f601909b7f6d81d7a61a484254248146dcc759d2bd39368325041a",
    "value": "09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db"
  },
  {
    "key": "d7f9960944fbbb1799fcb69fe82c0ed145d0509126609dbba40009ac051e0e96",
    "value": "00000000000003e8000000000000000000000000000000000000000000000000"
  },
  {
    "key": "e0137e50646929fa36cda94dce8a441b258f9f3e8071264557bfc3dd6888277c",
    "value": "0000000000000000000000000000000001000000000000000000000000000000"
  },
  {
    "key": "e0137e50646929fa36cda94dce8a441b258f9f3e8071264557bfc3dd6888277d",
    "value": "09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db"
  }
];

export class SimpleFuturesInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    close_position: FunctionFragment;
    constructor: FunctionFragment;
    get_contract_margin: FunctionFragment;
    get_position: FunctionFragment;
    get_price: FunctionFragment;
    open_position: FunctionFragment;
    set_asset_price: FunctionFragment;
  };
}

export class SimpleFutures extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: SimpleFuturesInterface;
  declare functions: {
    close_position: InvokeFunction<[isLong: boolean], void>;
    constructor: InvokeFunction<[_futuresExpiration: BigNumberish, _maintenanceMargin: BigNumberish, _leverage_divident: BigNumberish, _asset_price: BigNumberish], void>;
    get_contract_margin: InvokeFunction<[], BN>;
    get_position: InvokeFunction<[isLong: boolean], PositionOutput>;
    get_price: InvokeFunction<[price_feed_id: string], PriceOutput>;
    open_position: InvokeFunction<[leverage: BigNumberish, isLong: boolean], void>;
    set_asset_price: InvokeFunction<[_asset_price: BigNumberish], void>;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
